{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","searchTerm","target","value","console","log","state","handleSubmit","e","preventDefault","axios","post","then","res","data","results","gif_img","catch","err","displayImage","focusedImg","_this2","_this$state","react_default","a","createElement","className","src","gifUrl","alt","onSubmit","id","type","onChange","map","i","key","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4RAuFeA,cAhFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAURQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CAAEC,WAAYF,EAAMG,OAAOC,QACxCC,QAAQC,IAAId,EAAKe,MAAML,aAbPV,EAgBnBgB,aAAe,SAACC,GACdA,EAAEC,iBADkB,IAEZR,EAAeV,EAAKe,MAApBL,WACRG,QAAQC,IAAIJ,GACZS,IAAMC,KAAN,mCAA+C,CAC7CV,eAGDW,KAAK,SAAAC,GACJT,QAAQC,IAAIQ,EAAIC,KAAKC,SACrBxB,EAAKS,SAAS,CAACgB,QAAQH,EAAIC,KAAKC,YAC/BE,MAAM,SAACC,GAAD,OAAQd,QAAQC,IAAIa,MA3BZ3B,EA+BnB4B,aAAe,SAACC,GACd7B,EAAKS,SAAS,CACZoB,gBA9BF7B,EAAKe,MAAQ,CACXL,WAAY,GACZe,QAAS,GACTI,WAAY,MANG7B,wEAsCV,IAAA8B,EAAA3B,KAAA4B,EAEmC5B,KAAKY,MAAxCU,EAFAM,EAEAN,QAASf,EAFTqB,EAESrB,WAAYmB,EAFrBE,EAEqBF,WAE5B,OAAIA,EAEAG,EAAAC,EAAAC,cAAA,OACEC,UAAW,oBACXC,IAAKP,EAAWQ,OAChBC,IAAI,QAQRN,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YAEbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASI,SAAUpC,KAAKa,cACxCgB,EAAAC,EAAAC,cAAA,yBACEF,EAAAC,EAAAC,cAAA,SAAOM,GAAI,mBAAmBC,KAAK,OAAO7B,MAAOF,EAAYgC,SAAUvC,KAAKI,eAC5EyB,EAAAC,EAAAC,cAAA,UAAQM,GAAG,qBAAX,YAGHf,EAAQkB,IAAI,SAAClB,EAASmB,GAAV,OACXZ,EAAAC,EAAAC,cAAA,OACEC,UAAW,qBACXC,IAAKX,EAAQY,OACbC,IAAI,SACJO,IAAKD,EACLE,QAAS,kBAAMhB,EAAKF,aAAaH,gBAxE7BsB,IAAMC,WCCxBC,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.356e87af.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props); \n\n    this.state = {\n      searchTerm: \"\",\n      gif_img: [],\n      focusedImg: null\n    }\n  }\n\n\n  handleChange = (event) =>{\n    this.setState({ searchTerm: event.target.value });\n     console.log(this.state.searchTerm)\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n    console.log(searchTerm);\n    axios.post(`http://localhost:3000/gif_search`, {\n      searchTerm\n    })\n\n    .then(res => {\n      console.log(res.data.results);\n      this.setState({gif_img:res.data.results})\n    }).catch((err)=> console.log(err))\n  }\n\n\n  displayImage = (focusedImg) => {\n    this.setState({\n      focusedImg\n    });\n  }\n\n\n  render() {\n    \n    const {gif_img, searchTerm, focusedImg} = this.state;\n\n    if (focusedImg) {\n      return (\n        <img\n          className= \"gif-focus-display\"\n          src={focusedImg.gifUrl}\n          alt=\"gif\"\n        />\n      );\n    }\n\n    return (\n\n\n      <div className = \"wholepage\">\n        <div className = \"myheader\"> \n       \n            <form className=\"myform\" onSubmit={this.handleSubmit}>\n            <h1>Search gifs</h1>\n              <input id= \"gif-search-input\" type=\"text\" value={searchTerm} onChange={this.handleChange} />\n              <button id=\"gif-search-submit\">Search</button>\n            </form>\n          </div>\n          {gif_img.map((gif_img, i) => (\n            <img\n              className= \"gif-result-display\"\n              src={gif_img.gifUrl}\n              alt=\"gifimg\"\n              key={i}\n              onClick={() => this.displayImage(gif_img)}\n            />\n          ))}\n        </div>\n\n    )\n          }\n        }\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}